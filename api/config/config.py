import os

# Solo cargar .env si NO est√°s en Render
if os.getenv("RENDER") is None:
    from dotenv import load_dotenv
    load_dotenv()

from supabase import create_client

# üîë Leer variables del entorno
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_SERVICE_ROLE_KEY = os.getenv("SUPABASE_SERVICE_ROLE_KEY")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# üõ°Ô∏è Validaciones
if not SUPABASE_URL or not SUPABASE_SERVICE_ROLE_KEY:
    raise ValueError("‚ùå Faltan SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY en las variables de entorno")

# ‚úÖ Confirmaci√≥n
print(f"‚úÖ Supabase configurado con service_role key (termina en: {SUPABASE_SERVICE_ROLE_KEY[-6:]})")

# üîÅ Set API key de OpenAI para que est√© disponible globalmente
if OPENAI_API_KEY:
    os.environ["OPENAI_API_KEY"] = OPENAI_API_KEY
    print("üîê OPENAI_API_KEY cargada correctamente.")
else:
    raise ValueError("‚ùå Falta OPENAI_API_KEY en las variables de entorno")

# ‚òÅÔ∏è Inicializa el cliente Supabase
supabase = create_client(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY)
